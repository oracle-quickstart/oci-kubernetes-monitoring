# Copyright (c) 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v1.0 as shown at https://oss.oracle.com/licenses/upl.

global:
  # -- Kubernetes Namespace in which the resources to be created. Set oci-kubernetes-monitoring-common:createNamespace set to true, if the namespace doesn't exist.
  namespace: oci-onm
  # -- Prefix to be attached to resources created through this chart. Not all resources may have this prefix.
  resourceNamePrefix: oci-onm
  # -- OKE OCID for an OKE cluster or an unique ID for other Kubernetes clusters.
  kubernetesClusterID:
  # -- Provide a unique name for the cluster. This would help uniquely identifying the logs and metrics data at OCI Logging Analytics and OCI Monitoring respectivelt, when moitoring multiple clustersa
  kubernetesClusterName:

oci-onm-common:
  # -- By default, a cluster role, cluster role binding and serviceaccount will be created for the monitoring pods to be able to (readonly) access various objects within the cluster, to support collection of various telemetry data. You may set this to false and provide your own serviceaccount which has the necessary cluster role(s) binded to it. Refer, README for the cluster role definition and other details.
  createServiceAccount: true
  # -- If createNamespace is set to true, it tries to create the namespace defined in 'namespace' variable.
  createNamespace: true
  # -- Kubernetes Namespace in which the serviceaccount to be created.
  namespace: "{{ .Values.global.namespace }}"
  # -- Prefix to be attached to resources created through this chart. Not all resources may have this prefix.
  resourceNamePrefix: "{{ .Values.global.resourceNamePrefix }}"
  # -- Name of the Kubernetes ServiceAccount
  serviceAccount: "{{ .Values.global.resourceNamePrefix }}"

oci-onm-logan:
  oci-onm-common:
    enabled: false
  namespace: "{{ .Values.global.namespace }}"
  serviceAccount: "{{ .Values.global.resourceNamePrefix }}"
  kubernetesClusterID: "{{ .Values.global.kubernetesClusterID }}"
  kubernetesClusterName: "{{ .Values.global.kubernetesClusterName }}"
  image:
    url: iad.ocir.io/id3m3bqjn6oc/k8-objects-discovery:master-5e03e34 #TODO
  # Go to OCI Logging Analytics Administration, click Service Details, and note the namespace value.
  ociLANamespace:
  # OCI Logging Analytics Default Log Group OCID
  ociLALogGroupID:
  # OCI Logging Analytics Entity OCID representing the target cluster
  ociLAClusterEntityID:

oci-onm-mgmt-agent:
  oci-onm-common:
    enabled: false
  namespace: "{{ .Values.global.namespace }}"
  serviceAccount: "{{ .Values.global.resourceNamePrefix }}"
  kubernetesCluster:
    name: "{{ .Values.global.kubernetesClusterName }}"
  mgmtagent:
    # Provide the base64 encoded content of the Management Agent Install Key file
    installKeyFileContent:
    # Follow steps documented at https://github.com/oracle/docker-images/tree/main/OracleManagementAgent to build docker image.
    image:
      # Replace this value with actual docker image URL for Management Agent
      url: container-registry.oracle.com/oci_observability_management/oci-management-agent:1.2.0
      # Image secrets to use for pulling container image (base64 encoded content of ~/.docker/config.json file)
      secret: