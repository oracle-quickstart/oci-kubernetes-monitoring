# Copyright (c) 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v1.0 as shown at https://oss.oracle.com/licenses/upl.

{{- $kubernetesClusterName := (include "logan.kubernetesClusterName" .) }}
{{- $kubernetesClusterId := (include "logan.kubernetesClusterId" .) }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "logan.resourceNamePrefix" . }}-objects
  namespace: {{ include "logan.namespace" . }}
data:
  # fluentd config file data.
  fluent.conf: |
    @include kubernetes.conf
    {{- $authtype := .Values.authtype | lower }}
    # Match block to set info required for oci-logging-analytics fluentd output plugin
    <match k8s.**>
       @type oci-logging-analytics
       enable_ruby               true
       namespace                 "{{ .Values.ociLANamespace }}"
       endpoint                  "{{ .Values.fluentd.ociLoggingAnalyticsOutputPlugin.endpoint }}"
       {{- if eq $authtype "config" }}
       config_file_location      {{ .Values.oci.path }}/{{ .Values.oci.file }}
       profile_name              "{{ .Values.fluentd.ociLoggingAnalyticsOutputPlugin.profile_name }}"
       {{- end }}
       plugin_log_location       "{{ .Values.fluentd.baseDir }}"
       plugin_log_level          "{{ .Values.fluentd.ociLoggingAnalyticsOutputPlugin.plugin_log_level }}"
       plugin_log_file_size      "{{ .Values.fluentd.ociLoggingAnalyticsOutputPlugin.plugin_log_file_size }}"
       plugin_log_file_count     "{{ .Values.fluentd.ociLoggingAnalyticsOutputPlugin.plugin_log_file_count }}"
       <buffer>
             @type                           file
             path                            {{ .Values.fluentd.baseDir }}/oci_la_fluentd_outplugin/objects/buffer/
             flush_thread_count              "{{ .Values.fluentd.ociLoggingAnalyticsOutputPlugin.buffer.flush_thread_count }}"
             chunk_limit_size                "2m"
             total_limit_size                "{{ .Values.fluentd.ociLoggingAnalyticsOutputPlugin.buffer.total_limit_size }}"
             flush_interval                  "{{ .Values.fluentd.ociLoggingAnalyticsOutputPlugin.buffer.flush_interval }}"
             flush_thread_interval           "{{ .Values.fluentd.ociLoggingAnalyticsOutputPlugin.buffer.flush_thread_interval }}"
             flush_thread_burst_interval     "{{ .Values.fluentd.ociLoggingAnalyticsOutputPlugin.buffer.flush_thread_burst_interval }}"
             retry_wait                      "{{ .Values.fluentd.ociLoggingAnalyticsOutputPlugin.buffer.retry_wait }}"
             retry_max_times                 "{{ .Values.fluentd.ociLoggingAnalyticsOutputPlugin.buffer.retry_max_times }}"
             retry_exponential_backoff_base  "{{ .Values.fluentd.ociLoggingAnalyticsOutputPlugin.buffer.retry_exponential_backoff_base }}"
             retry_forever                   "{{ .Values.fluentd.ociLoggingAnalyticsOutputPlugin.buffer.retry_forever }}"
             disable_chunk_backup "{{ .Values.fluentd.ociLoggingAnalyticsOutputPlugin.buffer.disable_chunk_backup }}"
       </buffer>
    </match>
  # kubernetes config file data which is included in main fluentd config file.
  kubernetes.conf: |
    {{- $freq := .Values.objectsPollingFrequency }}
    # To ignore all the fluentd core generated events
    <label @FLUENT_LOG>
       <match fluent.**>
       @type null
       @id ignore_fluent_logs
       </match>
    </label>
    {{- if .Values.fluentd.kubernetesObjects }}
    {{- range $name, $logDefinition := .Values.fluentd.kubernetesObjects.objectsList }}
    <source>
      @type kubernetes_objects
      tag k8s.*
      {{- if ($logDefinition).api_version }}
      api_version {{ $logDefinition.api_version }}
      {{- end }}
      {{- if ($logDefinition).api_endpoint }}
      api_endpoint {{ $logDefinition.api_endpoint }}
      {{- end }}
      {{- if eq "events" $name }}
      <watch>
        resource_name {{ $name }}
      </watch>
      {{ else }}
      <pull>
        resource_name {{ $name }}
        interval {{ $.Values.objectsPollingFrequency }}
      </pull>
      {{- end }}
    </source>
    {{- if eq "cron_jobs" $name }}
    # To support cronJob Object collection for Kubernetes versions <= 1.19 where cronJob is available under v1beta1 api version
    <source>
      @type kubernetes_objects
      tag k8s.*
      api_version v1beta1
      api_endpoint apis/batch

      <pull>
        resource_name cron_jobs
        interval {{ $.Values.objectsPollingFrequency }}
      </pull>
    </source>
    {{- end }}
    {{- end }}
    <filter k8s.**>
      @type record_transformer
      enable_ruby true
      <record>
        {{- if .Values.fluentd.kubernetesObjects.metadata }}
        oci_la_metadata ${{"{{"}}"Kubernetes Cluster Name":"{{ $kubernetesClusterName }}", "Kubernetes Cluster ID": "{{ $kubernetesClusterId }}" {{- range $k, $v := .Values.fluentd.kubernetesObjects.metadata }},{{ $k | quote }}: {{ $v | quote -}} {{- end }}{{"}}"}}
        {{- else }}
        oci_la_metadata ${{"{{"}}"Kubernetes Cluster Name":"{{ $kubernetesClusterName }}", "Kubernetes Cluster ID": "{{ $kubernetesClusterId }}" {{- range $k, $v := .Values.metadata }},{{ $k | quote }}: {{ $v | quote -}} {{- end }}{{"}}"}}
        {{- end }}
        oci_la_log_group_id "{{ .Values.fluentd.kubernetesObjects.ociLALogGroupID | default .Values.ociLALogGroupID }}"
        oci_la_log_set "{{ .Values.fluentd.kubernetesObjects.ociLALogSet | default .Values.ociLALogSet }}"
        oci_la_log_path ${tag}
        oci_la_log_source_name "Kubernetes Object Logs"
        message ${record}
        tag ${tag}
      </record>
    </filter>
    {{- end }}
