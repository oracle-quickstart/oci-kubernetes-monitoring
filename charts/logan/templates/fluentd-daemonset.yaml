# Copyright (c) 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v1.0 as shown at https://oss.oracle.com/licenses/upl.

---
{{- $authtype := .Values.authtype | lower }}
{{- $imagePullSecrets := .Values.image.imagePullSecrets }}
{{- $resourceNamePrefix := (include "logan.resourceNamePrefix" .) }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ $resourceNamePrefix }}-logan
  namespace: {{ include "logan.namespace" . }}
  labels:
    app: {{ $resourceNamePrefix }}-logan
    version: v1
spec:
  selector:
    matchLabels:
      app: {{ $resourceNamePrefix }}-logan
      version: v1
  template:
    metadata:
      annotations:
        {{- if eq $authtype "config" }}
        checksum/secrets: {{ include (print $.Template.BasePath "/oci-config-secret.yaml") . | sha256sum }}
        {{- end}}
        checksum/configmap: {{ include (print $.Template.BasePath "/logs-configmap.yaml") . | sha256sum }}
      labels:
        app: {{ $resourceNamePrefix }}-logan
        version: v1
    spec:
      serviceAccountName: {{ include "logan.serviceAccount" . }}
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule
      {{- if $imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.image.imagePullSecrets }}
      {{- end}}
      containers:
      - name: {{ $resourceNamePrefix }}-fluentd
        image: {{ .Values.image.url }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.imagePullPolicy }}
        {{- if .Values.privileged }}
        securityContext:
          privileged: {{ .Values.privileged }}
        {{- end}}
        env:
          - name: FLUENTD_CONF
            value: {{ .Values.fluentd.path }}/{{ .Values.fluentd.file }}
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: FLUENT_OCI_DEFAULT_LOGGROUP_ID
            value: {{ .Values.ociLALogGroupID }}
          - name: FLUENT_OCI_NAMESPACE
            value: {{ .Values.ociLANamespace }}
          - name: FLUENT_OCI_KUBERNETES_CLUSTER_ID
            value: {{ include "logan.kubernetesClusterId" . }}
          - name: FLUENT_OCI_KUBERNETES_CLUSTER_NAME
            value: {{ include "logan.kubernetesClusterName" . }}
          {{- if eq $authtype "config" }}
          - name: FLUENT_OCI_CONFIG_LOCATION
            value: {{ .Values.oci.path }}/{{ .Values.oci.file }}
          {{- end }}
          {{- if .Values.extraEnv }}
          {{- toYaml .Values.extraEnv | nindent 10 }}
          {{- end }}
        {{- if .Values.resources }}
        resources: {{- toYaml .Values.resources | nindent 10 }}
        {{- end }}
        volumeMounts:
        # Mount all relevant locations depending on where the actual logs presents.
        - name: varlog
          mountPath: /var/log
          {{- if ne .Values.fluentd.baseDir "/var/log" }}
          readOnly: true
          {{- end }}
        - name: dockercontainerlogdirectory
          mountPath: {{ .Values.volumes.podsHostPath }}
          readOnly: true
        - name: dockercontainerdatadirectory
          mountPath: {{ .Values.volumes.containerdataHostPath }}
          readOnly: true
        # RW mount to store pos files, buffer and output plugin logs (if baseDir is not /var/log)
        {{- if ne .Values.fluentd.baseDir "/var/log" }}
        - name: basedir
          mountPath: {{ .Values.fluentd.baseDir }}
        {{- end }}
        {{- if eq $authtype "config" }}
        # Mount directory where oci config exists
        - name: ociconfigdir
          mountPath: {{ .Values.oci.path }}
          readOnly: true
        {{- end }}
        # Mount directory where fluentd config exists
        - name: fluentdconfigdir
          mountPath: {{ .Values.fluentd.path }}
          readOnly: true
        {{- if .Values.extraVolumeMounts }}
        {{- toYaml .Values.extraVolumeMounts | nindent 8 }}
        {{- end }}
      terminationGracePeriodSeconds: 30
      volumes:
      {{- if .Values.extraVolumes }}
      {{- toYaml .Values.extraVolumes | nindent 6 }}
      {{- end }}
      # Mount all relevant locations depending on where the actual logs presents.
      - name: varlog
        hostPath:
          path: /var/log
      - name: dockercontainerlogdirectory
        hostPath:
          path: {{ .Values.volumes.podsHostPath }}
      - name: dockercontainerdatadirectory
        hostPath:
          path: {{ .Values.volumes.containerdataHostPath }}
      # RW mount to store tail plugin pos files, output plugin buffer and logs (if baseDir is not /var/log)
      {{- if ne .Values.fluentd.baseDir "/var/log" }}
      - name: basedir
        hostPath:
          path: {{ .Values.fluentd.baseDir }}
      {{- end }}
      {{- if eq $authtype "config" }}
      # Mount directory where oci config exists
      - name: ociconfigdir
        projected:
          sources:
              - secret:
                  name: {{ $resourceNamePrefix }}-oci-config
      {{- end }}
      # Mount directory where fluentd config exists
      - name: fluentdconfigdir
        configMap:
          # Provide the name of the ConfigMap to mount.
          name: {{ $resourceNamePrefix }}-logs
